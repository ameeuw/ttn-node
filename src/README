### TTGO T-BEAM LMIC-Node

This code holds the functionality to keep a collection of nodes based on Tasmota working without internet.
The uplink and downlink is realised via LoRaWAN (TheThingsNetwork TTN), local connectivity is handled by 
PicoMQTT and time synchronisation is achieved via GPS.

The process is divided into multiple tasks which either act on incoming events or work off queues.


The LoRaWAN code is heavily based on the LMIC-Node project which seems to be the one-fits-all-solution to anything LoRaWAN.
It is reduced and extended to be processed by FreeRTOS and adds queue-workers for both sides.

### Hardware
Lopy v1
TTGO Lora32
TTGO T-Beam V1.2

### Tasks
- HandleUplinkMessage
- HandleDownloadMessage
  
### Queues
- UplinkQueue
- DownlinkQueue

### PicoMQTT
### Tasmota Registry
- 

### Todos
- Keep list of registered devices
- Scan for known sensors and anticipate payloads
- Automatically export payload formatter using script
- Map fports to structs
- Sync time from GPS
- Update time on registered nodes via MQTT
- Set teleperiod on registered devices
- Unqueue double messages
- Add prioritisation to linkMessages
- Check memory allocation and freeing
- Add back DISTANCE MOVED
- Forward Downlink messages to MQTT
- Confirm sending of downlink messages via uplink message
- Change key management to be equivalent to ttn mapper style
- Forward LMIC events via MQTT
- Reboot or reconnect on lost LMIC connection
- Retry failed scheduleUplink calls